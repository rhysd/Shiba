name: CI for v2
on: [push, pull_request]
env:
  TERM: xterm
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings
  RUST_BACKTRACE: 1
defaults:
  run:
    working-directory: v2

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: v2 -> v2/target
      - uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: npm
          cache-dependency-path: v2/package-lock.json
      - run: sudo bash ./scripts/install_apt_deps.bash
        if: ${{ matrix.os == 'ubuntu-latest' }}
      - run: npm ci
      - run: npm run bundle
      - run: cargo test
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: v2 -> v2/target
      - uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: npm
          cache-dependency-path: v2/package-lock.json
      - run: sudo bash ./scripts/install_apt_deps.bash
      - run: npm ci
      - run: npm run lint:tsc
      - run: npm run bundle
      - run: npm run lint:prettier
      - run: npm run lint:eslint
      - run: npm run lint:stylelint
      - run: cargo fmt --all --check
      - run: cargo clippy --all --benches --tests -- -D warnings
      - run: shellcheck ./scripts/gen_macos_app.bash
